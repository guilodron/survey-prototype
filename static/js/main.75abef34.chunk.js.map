{"version":3,"sources":["pages/Survey/styles.js","config/questions.js","pages/Survey/index.js","globalStyle.js","App.js","index.js"],"names":["Container","styled","div","rotate","keyframes","typing","Question","Options","Answer","Form","form","content","hasOptions","placeholder","id","options","quizEnd","Survey","useState","answers","setAnswer","currentQuestion","setCurrentQuestion","setInput","inputSubmit","useCallback","e","preventDefault","console","log","target","input","value","answer","handleOption","ended","setEnded","endQuiz","endRef","useRef","useEffect","current","scrollIntoView","behavior","questions","filter","question","map","key","option","onClick","onSubmit","type","name","onChange","style","marginTop","marginBottom","ref","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75abef34.chunk.js","sourcesContent":["import styled, {keyframes} from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  /* height: 100vh; */\r\n  max-width: 950px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  padding-bottom: 300px;  \r\n`;\r\n\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    visibility: hidden;\r\n    margin-left: 30%;\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    visibility: visible;\r\n    margin-left: 0;\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst typing = keyframes`\r\n  from { width: 0; visibility: hidden; white-space: nowrap }\r\n  to { width: 100%; visibility: visible; white-space: normal }\r\n`;\r\n\r\nexport const Question = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n  span {\r\n    width: 0%;\r\n    visibility: hidden;\r\n    overflow: hidden;\r\n    animation: ${typing} 5s steps(100, end) forwards;\r\n    border-bottom: 1px solid #FF6B35;\r\n    padding: 18px;\r\n    max-width: 320px;\r\n    white-space: nowrap;\r\n    color: black;\r\n    font-size: 1.25rem;\r\n    font-weight: bold;\r\n  }\r\n  `;\r\n\r\nexport const Options = styled.div`\r\n  visibility: hidden;\r\n  animation: ${rotate} 0.7s linear forwards;\r\n  animation-delay: 1.5s;\r\n  margin-top: 15px;\r\n  margin-bottom: 20px;\r\n\r\n  button {\r\n    background-color: #FF6B35;\r\n    padding: 10px;\r\n    border: none;\r\n    border-radius: 20px;\r\n    margin-right: 20px;\r\n    min-width: 80px;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Answer = styled.div`\r\n  align-self: flex-end;\r\n  span {\r\n\r\n    background: #1A659E;\r\n    visibility: visible;\r\n    padding: 18px;\r\n    border-radius: 20px;\r\n    font-size: 1.25rem;\r\n\r\n    font-weight: bold;\r\n    color: white;\r\n\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  margin-top: 10px;\r\n  min-width: 300px;\r\n  animation: ${rotate} 0.7s linear forwards;\r\n  animation-delay: 1.5s;\r\n  visibility: hidden;\r\n  margin-bottom: 20px;\r\n\r\n  input {\r\n    font-size: 21px;\r\n    line-height: 45px;\r\n    border: none;\r\n  }\r\n\r\n  button {\r\n    height: 45px;\r\n    font-size: 21px;\r\n    border: none;\r\n    background-color: #FF6B35;\r\n    padding: 10px;\r\n    border-radius: 20px;\r\n\r\n  }\r\n`;\r\n","export default [\r\n  {\r\n    content: 'Qual seu nome?',\r\n    hasOptions: false,\r\n    placeholder: 'Digite seu nome',\r\n    id: 1\r\n  },\r\n  {\r\n    content: 'Quantos anos você tem?',\r\n    hasOptions: true,\r\n    options: [\r\n      'Entre 15-20',\r\n      'Entre 20-40',\r\n      'Entre 40-50'\r\n    ],\r\n    id: 2\r\n  },\r\n  {\r\n    content: 'Qual a capital do Brasil?',\r\n    hasOptions: true,\r\n    options: [\r\n      'Brasília',\r\n      'Curitiba',\r\n      'São Paulo',\r\n      'Rio de Janeiro'\r\n    ],\r\n    id: 3\r\n  },\r\n  {\r\n    content: 'Quantos estados exitem no Brasil?',\r\n    hasOptions: true,\r\n    options: [\r\n      '27',\r\n      '22',\r\n      '21'\r\n    ],\r\n    id: 4\r\n  },\r\n  {\r\n    content: 'Em que ano o Brasil foi descoberto?',\r\n    hasOptions: true,\r\n    options: [\r\n      '1500',\r\n      '1400',\r\n      '1799'\r\n    ],\r\n    id: 5\r\n  },\r\n  {\r\n    content: 'Quantas copas do mundo o Brasil já ganhou?',\r\n    hasOptions: true,\r\n    options: [\r\n      '3',\r\n      '4',\r\n      '5',\r\n      '10'\r\n    ],\r\n    id: 6\r\n  },\r\n  {\r\n    content: 'Quem foi o primeiro rei do Brasil?',\r\n    hasOptions: true,\r\n    options: [\r\n      'Dom Pedro I',\r\n      'Costa e Silva',\r\n      'Dom João',\r\n      'Dom Pedro II'\r\n    ],\r\n    id: 7\r\n  },\r\n  {\r\n    content: 'O que você achou do quiz?',\r\n    placeholder: 'Conte-nos',\r\n    hasOptions: false,\r\n    id: 8,\r\n    quizEnd: true,\r\n  },\r\n];","import React, { useState, useCallback, useRef, useEffect } from 'react';\r\nimport {Container, Question, Options, Answer, Form} from './styles';\r\nimport questions from '../../config/questions';\r\n\r\n\r\nconst Survey = () => {\r\n  \r\n\r\n  const [answers, setAnswer] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(1);\r\n  const [inputValue, setInput] = useState('');\r\n\r\n  const inputSubmit = useCallback((e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.input.value);\r\n    setAnswer([...answers, {id: currentQuestion, answer: e.target.input.value}]);\r\n    // e.target.input.value = '';\r\n    setCurrentQuestion(currentQuestion + 1);\r\n  }, [answers, currentQuestion]);\r\n\r\n  const handleOption = useCallback((e) => {\r\n    console.log(e.target.value);\r\n    setCurrentQuestion(currentQuestion + 1);\r\n    setAnswer([...answers, {id: currentQuestion, answer: e.target.value}]);\r\n    console.log(answers);\r\n  }, [currentQuestion, answers]);\r\n\r\n  const [ended, setEnded] = useState(false);\r\n\r\n  const endQuiz = useCallback(() => {\r\n    console.log('acabou');\r\n    setEnded(true);\r\n  }, [])\r\n\r\n  const endRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    endRef.current.scrollIntoView({behavior: 'smooth'});\r\n  }, [currentQuestion])\r\n\r\n  return (\r\n    <Container>\r\n      {questions\r\n        .filter(question => question.id <= currentQuestion)\r\n        .map(question => (\r\n          <>\r\n            <Question key={question.id}>\r\n              <span>{question.content}</span>\r\n              \r\n              {question.hasOptions ? \r\n                <Options>\r\n                  {question.options.map(option => (\r\n                    <button value={option} onClick={handleOption} key={option}>{option}</button>\r\n                  ))}\r\n                </Options> : \r\n                <Form onSubmit={inputSubmit} >\r\n                  <input placeholder={question.placeholder} type=\"text\" name=\"input\" onChange={(e) => setInput(e.target.value)}></input>\r\n                  <button type=\"submit\">Enviar</button>\r\n                </Form>\r\n              }\r\n            </Question>\r\n            {answers[question.id - 1] ? \r\n            <Answer style={{marginTop: 20, marginBottom: 20}}>\r\n              <span>{answers[question.id - 1].answer}</span>\r\n            </Answer> : <div />}\r\n\r\n            {question.quizEnd && <button onClick={endQuiz}>End Quiz</button>}\r\n            \r\n          </>\r\n        ))}\r\n      <div ref={endRef} />\r\n\r\n      {ended && \r\n        <div>\r\n          <h2>Suas respostas foram:</h2>\r\n          {answers.map(answer => (\r\n            <>\r\n              <h3>{`Q.${answer.id}`}</h3>\r\n              <p>{answer.answer}</p>\r\n            </>\r\n          ))}\r\n        </div>\r\n      }\r\n      \r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Survey;","import {createGlobalStyle} from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n\r\n  }\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: sans-serif;\r\n\r\n  }\r\n`\r\n\r\nexport default GlobalStyle;","import React from 'react';\nimport Survey from './pages/Survey';\nimport GlobalStyle from './globalStyle';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Survey />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}